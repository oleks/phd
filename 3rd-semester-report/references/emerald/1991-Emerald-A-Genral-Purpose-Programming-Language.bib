@article{emerald:spe:1991,
author = {Raj, Rajendra K. and Tempero, Ewan and Levy, Henry M. and Black, Andrew P. and Hutchinson, Norman C. and Jul, Eric},
title = {Emerald: A General-Purpose Programming Language},
journal = {Software: Practice and Experience},
volume = {21},
number = {1},
pages = {91-118},
keywords = {Programming languages, Programming methodology, Object-oriented programming, Abstract data types, Inheritance, Object-based concurrency},
doi = {10.1002/spe.4380210107},
abstract = {Abstract Emerald is a general-purpose language with aspects of traditional object-oriented languages, such as Smalltalk, and abstract data type languages, such as Modula-2 and Ada. It is strongly typed with a non-traditional object model and type system that emphasize abstract types, allow separation of typing and implementation, and provide the flexibility of polymorphism and subtyping with compile-time checking. This paper describes the Emerald language and its programming methodology. We give examples that demonstrate Emerald's features, and compare and contrast the Emerald approach to programming with the approaches used in other similar languages.},
year = {1991}
}
